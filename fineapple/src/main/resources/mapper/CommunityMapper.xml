<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.fineapple.mapper.CommunityMapper">

	<resultMap type="board" id="boardMap">
		<result property="postNo" column="post_no"/>
		<result property="user.userId" column="user_id"/>
		<result property="group.groupNo" column="group_no" jdbcType="INTEGER"/>
		<result property="title" column="title"/>
		<result property="content" column="content"/>
		<result property="postDate" column="post_date"/>
		<result property="viewCount" column="view_count"/>
		<result property="cmntCount" column="cmnt_count"/>
		<result property="postLikeCount" column="post_like_count"/>
		<result property="updateStt" column="update_stt"/>
		<result property="cateName" column="post_cate"/>
	</resultMap>
	

	<resultMap type="cmnt" id="cmntMap">
		<result property="cmntNo" column="cmnt_no"/>
		<result property="user.userId" column="cmnt_user_id"/>
		<result property="board.postNo" column="post_no"/>
		<result property="cmntContent" column="cmnt_content"/>
		<result property="cmntDate" column="cmnt_date"/>
		<result property="cmntLikeCount" column="cmnt_like_count"/>
		<result property="updateStt" column="update_stt"/>
	</resultMap>
	
	<resultMap type="group" id="groupMap">
		<result property="groupNo" column="group_no"/>
		<result property="groupName" column="group_name"/>
		<result property="groupIntro" column="group_intro"/>
		<result property="userCount" column="user_count"/>
		<result property="groupBirth" column="group_birth"/>
	</resultMap>
	
	<resultMap type="groupUser" id="groupUserMap">
		<result property="groupUserNo" column="group_user_no"/>
		<result property="group.groupNo" column="group_no"/>
		<result property="user.userId" column="user_id"/>
		<result property="groupStt" column="group_stt"/>
		<result property="captainStt" column="captain_stt"/>
	</resultMap>
	
	<resultMap type="follow" id="followMap">
		<result property="followNo" column=""/>
		<result property="toUser.userId" column="to_user_id"/>
		<result property="fromUser.userId" column="from_user_id"/>
		<result property="followStt" column="follow_stt"/>	
	</resultMap>
	
	
	
	
	<resultMap id = "userSelectMap"	type = "user">
		<result property="userId" column ="user_id" jdbcType="VARCHAR"/>
		<result property="userName" column = "user_name" jdbcType = "VARCHAR"/>
		<result property="password" 	column="password" 		jdbcType="VARCHAR" />
		<result	property="userImg"	column="user_img"	jdbcType="VARCHAR"/>
		<result property="role" 				column="role" 					jdbcType="VARCHAR" />
		<result property="gender"	column="gender"	jdbcType="VARCHAR"/>
		<result property="cellphone"	column="cellphone"	jdbcType="VARCHAR"/>
		<result property="age"	column="age"	jdbcType="INTEGER"/>
		<result property="height"	column="height"	jdbcType="INTEGER"/>
		<result property="blcRgsStt" column="blc_rgs_stt" jdbcType="INTEGER"/>
		<result property="userLeaveStt" column="user_leave_stt"	jdbcType="INTEGER"/>
		<result property="lastConTime"	column="last_con_time"	jdbcType="DATE"/>
		<result property="regDate"	column="reg_date"	jdbcType="DATE"/>
		<result property="strdWtrIntake"	column="str_wtr_intake"	jdbcType="DOUBLE"/>
		<result	property="userSttMsg"	column="user_stt_msg"	jdbcType="VARCHAR"/>
		<result property="blcAddDate"	column="blc_add_date"	jdbcType="DATE"/>
		<result property="blcAddWhy"	column="blc_add_why"	jdbcType="VARCHAR"/>
		<result property="dietServiceNo"	column="diet_service_no"	jdbcType="INTEGER"/>
		<result property="exerServiceNo"	column="exer_service_no"	jdbcType="INTEGER"/>
		<result property="trgtWeight"		column="trgt_weight"		jdbcType="DOUBLE"/>
		<result property="trgtBodyFat"		column="trgt_body_fat"		jdbcType="DOUBLE"/>
		<result	property="trgtBodyMuscle"	column="trgt_body_muscle"	jdbcType="DOUBLE"/>
		<result	property="serviceTrgt"	column="service_trgt"	jdbcType="VARCHAR"/>
		<result property="weight"	column="weight"		jdbcType="DOUBLE"/>
	</resultMap>
	
	<sql id="orderByPostNo">
	ORDER BY post_no
	</sql>
	

	<insert id="addPost" parameterType="board">
		<selectKey keyProperty="postNo" resultType="int" order="AFTER">
		SELECT seq_board_post_no.CURRVAL FROM dual
		</selectKey>
		
		INSERT INTO BOARD (
		POST_NO,
		USER_ID,
		GROUP_NO,
		POST_CATE,
		UPDATE_STT,
		TITLE, 
		CONTENT,
		POST_DATE
		)
		VALUES 
		(
		seq_board_post_no.NEXTVAL,
		#{user.userId},
		<if test="group.groupNo == 0">
		null,
		</if>	
		<if test="group.groupNo != 0">
		#{group.groupNo},
		</if>
		#{cateName},
		#{updateStt},
		#{title},
		#{content},
		SYSDATE
		)
	</insert>

	<insert id="addCmnt" parameterType="cmnt">
	INSERT INTO COMMENTS 
	(
	CMNT_NO, 
	POST_NO,
	CMNT_USER_ID, 
	UPDATE_STT, 
	CMNT_CONTENT, 
	CMNT_DATE
	) 
	VALUES
	(
	seq_comments_cmnt_no,
	#{board.postNo},
	#{user.userId},
	#{updateStt},
	#{cmntContenct},
	#{cmntDate}
	)
	</insert>
	
	<!-- //////////////////////////////////////////////////////// -->

	<select id="getPostList" resultMap="boardMap">
	SELECT
	b.post_no,
	b.user_id,
	b.update_stt,
	b.title,
	b.content,
	b.post_date,
	b.view_count,
	c.cmnt_count
	FROM
	board b,
	(
	SELECT COUNT(*)
	cmnt_count,
	c.post_no
	FROM board b, comments c
	WHERE b.post_no = c.post_no
	GROUP BY c.post_no
	) c
	<trim prefix="WHERE" prefixOverrides="AND | OR" suffixOverrides=",">
	b.post_no = c.post_no(+)
	</trim>
	<include refid="orderByPostNo"/>
	</select>
	
	<select id="getPost" parameterType="board" resultMap="boardMap">
	SELECT
	post_no,
	user_id,
	group_no,
	post_cate,
	update_stt,
	title,
	content,
	post_date,
	view_count
	FROM
	board
	<where>
	post_no = #{postNo}
	</where>
	</select>
	
	<select id="getCmntList" parameterType="board" resultMap="cmntMap">
	SELECT
	*
	FROM
	comments
	<trim prefix="WHERE" prefixOverrides="AND | OR">
	post_no = #{postNo}
	</trim>
	</select>
	
	<!-- //////////////////////////////////////////////////////// -->
	
	<update id="updatePostViewCount" parameterType="board">
	UPDATE BOARD 
	<set>
	VIEW_COUNT = NVL(VIEW_COUNT,0) + 1
	</set>
	<trim prefix="WHERE" prefixOverrides="AND | OR">
	post_no = #{postNo}
	</trim>
	</update>
	
	<!-- //////////////////////////////////////////////////////// -->
	
	<update id="updatePostLike" parameterType="map">
	UPDATE
	INTO
	board
	<trim prefix="SET" suffixOverrides=",">
	<if test="flag == 0">
	POST_LIKE_COUNT = POST_LIKE_COUNT + 1
	</if>
	<if test="flag == 1">
	POST_LIKE_COUNT = POST_LIKE_COUNT - 1
	</if>
	</trim>
	<where> 
	post_no = #{postNo}
	</where>
	</update>

	<update id="updateCmntLike" parameterType="map">
	UPDATE
	INTO
	comments
	<trim prefix="SET" suffixOverrides=",">
	<if test="flag == 0">
	POST_LIKE_COUNT = POST_LIKE_COUNT + 1
	</if>
	<if test="flag == 1">
	POST_LIKE_COUNT = POST_LIKE_COUNT - 1
	</if>
	</trim>
	<where> 
	post_no = #{board.postNo}
	</where>
	</update>
	
	<!-- //////////////////////////////////////////////////////// -->
	
	
	<update id="updatePost" parameterType="board">
	<selectKey  order="AFTER"></selectKey>
	UPDATE BOARD
	<set>
	SET TITLE = #{title}
	CONTENT = #{content}
	</set>
	<trim prefix="WHERE" prefixOverrides="WHERE | OR">
	post_no = #{postNo}
	</trim>
	</update>
	
	<update id="updateCmnt" parameterType="Cmnt">
	UPDATE COMMENTS 
	<set>
	CMNT_CONTENT = #{cmntContent}
	</set>
	<where>
	cmnt_no = #{cmntNo}
	</where>
	</update>
	
	
	<!-- //////////////////////////////////////////////////////// -->
	

	<insert id="addGroup"  parameterType="group">

	<!-- <selectKey keyProperty="groupNo" keyColumn="group_no" resultType="int" order="AFTER"> -->

	INSERT
	INTO
	groups
	(
	GROUP_NO, 
	GROUP_NAME,
	GROUP_INTRO, 
	GROUP_BIRTH
	) 
	VALUES 
	(
	seq_groups_groups_no.NEXTVAL,
	#{groupName},
	#{groupIntro},
	SYSDATE
	)
	</insert>
	
	<insert id="addGroupUser" parameterType="groupUser">
	INSERT
	INTO
	group_user
	(
	group_user_no,
	group_no,
	user_id,
	captain_stt,
	group_stt
	)
	VALUES
	(
	seq_group_user_no.NEXTVAL,
	#{groupNo},
	#{user.userId},
	#{captainStt},
	#{groupStt}
	)
	</insert>
	
	<delete id="deleteGroupUser" parameterType="groupUser">
	DELETE
	FROM
	group_user
	<where>
	user_id = #{user.userId}
	</where>
	</delete>
	
	
	
	
	<!-- //////////////////////////////////////////////////////// -->
	
	<select id="getGroupList" resultMap="groupMap">
	SELECT
	*
	FROM
	groups
	</select>
	
	<select id="getGroup" parameterType="group" resultMap="groupMap">
	SELECT
	*
	FROM
	<where>
	group_no = #{groupNo}
	</where>
	</select>
	
	<!-- //////////////////////////////////////////////////////// -->
	
	<select id="getGroupUserList" parameterType="group" resultMap="groupUserMap">
	SELECT
	*
	FROM
	group_user
	<trim prefix="WHERE" prefixOverrides="AND | OR">
	group_no = #{groupNo}
	</trim>
	</select>
	
	
	
	<!-- //////////////////////////////////////////////////////// -->
	
	<select id="getMyGroupList" parameterType="groupUser" resultMap="groupMap">
	SELECT
	g.group_no,
	g.group_name,
	g.group_intro,
	g.group_birth
	FROM
	groups g,
	group_user gu
	<trim prefix="WHERE" prefixOverrides="AND|OR" suffixOverrides=",">
	gu.user_id = #{user.userId}
	AND gu.group_no = g.group_no
	</trim>
	</select>
	
	
	<!-- //////////////////////////////////////////////////////// -->
	
	<select id="getGroupInterGroup" parameterType="groupUser" resultMap="groupMap">
		SELECT
		g.group_no,
		g.group_name,
		g.group_intro,
		g.group_birth
		FROM
		groups g,
		group_user gu
		<where>
		gu.user_id = #{user.userId}
		AND gu.group_stt = #{groupStt}
		AND gu.group_no = g.group_no
		</where>
	</select>
	
	<!-- //////////////////////////////////////////////////////// -->
	
	<select id="getGroupInterUser" parameterType="groupUser" resultMap="userSelectMap">
		SELECT
		u.user_id,
		u.user_name
		FROM
		groups g,
		group_user gu,
		group_user guu,
		users u
		<trim prefix="WHERE" prefixOverrides="AND | OR">
		gu.user_id = #{user.userId}
		AND gu.group_no = guu.group_no
		AND guu.group_stt = #{groupStt}
		AND guu.user_id = u.user_id
		</trim>
	</select>
	
	
	<!-- //////////////////////////////////////////////////////// -->
	
	<insert id="addReport" parameterType="report">
	INSERT
	INTO
	report_and_like 	
	(
	report_no,
	user_id,
	reported_user_id,
	post_no,
	cmnt_no,
	REPORT_LIKE_CATE,
	report_why,
	report_stt,
	report_date 
	)
	VALUES
	(
	seq_report_and_like_no.NEXTVAL,
	#{user.userId},
	#{reportedUser.userId},
	<if test='reportCate.equals("게시글신고")'>
	#{reportTrgt.postNo},
	null,
	</if>
	<if test='reportCate == "댓글신고"'>
	null,
	#{reportTrgt.cmntNo},
	</if>
	<if test='reportCate.equals("회원신고")'>
	null,
	null,
	</if>
	<!-- #{reportTrgt.postNo}, -->
	#{reportCate},
	#{reportCntnt},
	#{reportStt},
	SYSDATE
	)
	</insert>
	
	<!-- //////////////////////////////////////////////////////// -->
	
	<update id="addUserBlc">
	
	</update>
	
	
	<!-- //////////////////////////////////////////////////////// -->
	
	
</mapper>
